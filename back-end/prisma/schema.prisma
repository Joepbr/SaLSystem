// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model curso {
  id          String       @id
  lingua      String
  descricao   String?
  modulo      modulo[]
}

model modulo {
  id          Int           @default(autoincrement())
  titulo      String
  duracao     Int
  horario     String
  formato     String
  is_vip      Boolean
  preco       Float
  curso       curso         @relation(fields: [cursoId], references: [id])
  cursoId     String
  
  @@id([id, cursoId])
}

model user {
  id          Int           @id @default(autoincrement())
  nome        String
  email       String
  telefone    String
  password    String
  is_admin    Boolean       @default(false)
  end_logr    String
  end_num     String
  end_compl   String?
  end_cid     String
  professor   professor?
  aluno       aluno?
  responsavel responsavel?
}

model professor{
  cpf         Int           @id
  formacao    String?
  salario     Float?
  user        user          @relation(fields:[userId], references: [id])
  userId      Int           @unique
}

model aluno{
  matricula   Int           @id@default(autoincrement())
  data_nasc   DateTime
  user        user          @relation(fields:[userId], references:[id])
  userId      Int           @unique
  responsavel responsavel?
}

model responsavel{
  cpf         Int           @id
  user        user          @relation(fields:[userId], references:[id])
  userId      Int           @unique
  aluno       aluno         @relation(fields:[alunoMat], references:[matricula])
  alunoMat    Int           @unique
}